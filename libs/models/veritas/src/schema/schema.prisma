generator client {
  provider = "prisma-client-js"
  output   = "../lib/prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("ATLAS_DB")
}

model Category {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(128)
  createdAt       DateTime          @default(now()) @db.DateTime(0)
  deletedAt       DateTime?         @db.DateTime(0)
  CategoryProfile CategoryProfile[]
  Meet            Meet[]
}

model CategoryProfile {
  categoryId Int
  profileId  Int
  Category   Category @relation(fields: [categoryId], references: [id])
  Profile    Profile  @relation(fields: [profileId], references: [id])

  @@id([categoryId, profileId])
  @@index([categoryId], name: "fk_CategoryProfile_Category1_idx")
  @@index([profileId], name: "fk_CategoryProfile_Profile1_idx")
}

model Follow {
  profileId                               Int
  followProfileId                         Int
  createdAt                               DateTime @default(now()) @db.DateTime(0)
  Profile_Follow_followProfileIdToProfile Profile  @relation("Follow_followProfileIdToProfile", fields: [followProfileId], references: [id])
  Profile_Follow_profileIdToProfile       Profile  @relation("Follow_profileIdToProfile", fields: [profileId], references: [id])

  @@id([profileId, followProfileId])
  @@index([profileId], name: "fk_ProfileProfile_Profile1_idx")
  @@index([followProfileId], name: "fk_ProfileProfile_Profile2_idx")
}

model Meet {
  id           Int            @unique @default(autoincrement())
  profileId    Int
  title        String         @db.VarChar(128)
  description  String         @db.VarChar(512)
  startAt      DateTime       @db.DateTime(0)
  endAt        DateTime?      @db.DateTime(0)
  recurrent    Int            @default(0) @db.TinyInt
  enabled      Int?           @default(0) @db.TinyInt
  hasEnded     Int            @default(0) @db.TinyInt
  followCount  Int            @default(0)
  bannerUrl    String?        @db.VarChar(4096)
  createdAt    DateTime       @default(now()) @db.DateTime(0)
  updatedAt    DateTime?      @db.DateTime(0)
  categoryId   Int
  Category     Category       @relation(fields: [categoryId], references: [id])
  Profile      Profile        @relation(fields: [profileId], references: [id])
  MeetPlatform MeetPlatform[]
  MeetTag      MeetTag[]
  Subscription Subscription[]

  @@id([id, categoryId])
  @@index([categoryId], name: "fk_Meet_Category1_idx")
  @@index([profileId], name: "fk_Meet_Profile1_idx")
}

model MeetPlatform {
  meetId     Int
  platformId Int
  Meet       Meet     @relation(fields: [meetId], references: [id])
  Platform   Platform @relation(fields: [platformId], references: [id])

  @@id([meetId, platformId])
  @@index([meetId], name: "fk_MeetPlatform_Meet1_idx")
  @@index([platformId], name: "fk_MeetPlatform_Platform1_idx")
}

model MeetTag {
  meetId Int
  tagId  Int
  Meet   Meet @relation(fields: [meetId], references: [id])
  Tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([meetId, tagId])
  @@index([meetId], name: "fk_MeetTag_Meet1_idx")
  @@index([tagId], name: "fk_MeetTag_Tag1_idx")
}

model Platform {
  id           Int            @id @unique @default(autoincrement())
  name         String         @db.VarChar(128)
  platformLink String         @db.VarChar(128)
  icon         String?        @db.VarChar(128)
  MeetPlatform MeetPlatform[]
}

model Profile {
  id                                     Int               @id @default(autoincrement())
  name                                   String            @db.VarChar(64)
  secondName                             String?           @db.VarChar(64)
  description                            String?           @db.VarChar(512)
  profileImage                           String?           @db.VarChar(128)
  createdAt                              DateTime?         @default(now()) @db.DateTime(0)
  updatedAt                              DateTime?         @db.DateTime(0)
  CategoryProfile                        CategoryProfile[]
  Follow_Follow_followProfileIdToProfile Follow[]          @relation("Follow_followProfileIdToProfile")
  Follow_Follow_profileIdToProfile       Follow[]          @relation("Follow_profileIdToProfile")
  Meet                                   Meet[]
  Subscription                           Subscription[]
  User                                   User[]
}

model Subscription {
  profileId Int
  meetId    Int
  Meet      Meet    @relation(fields: [meetId], references: [id])
  Profile   Profile @relation(fields: [profileId], references: [id])

  @@id([profileId, meetId])
  @@index([meetId], name: "fk_ProfileMeet_Meet1_idx")
  @@index([profileId], name: "fk_ProfileMeet_Profile1_idx")
}

model Tag {
  id        Int       @id @unique @default(autoincrement())
  name      String    @db.VarChar(128)
  icon      String?   @db.VarChar(512)
  createdAt DateTime  @default(now()) @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)
  MeetTag   MeetTag[]
}

model User {
  id        String    @id @unique @db.VarChar(36)
  email     String    @unique @db.VarChar(128)
  password  String    @db.VarChar(128)
  createdAt DateTime  @default(now()) @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)
  profileId Int
  Profile   Profile   @relation(fields: [profileId], references: [id])

  @@index([profileId], name: "fk_User_Profile1_idx")
}
